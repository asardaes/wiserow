on:
  push:
    branches-ignore:
      - docs
    paths:
      - 'src/**'

name: R-CMD-check-with-sanitizers

jobs:
  check:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, img: 'r-devel-san'}
          - {os: ubuntu-latest, img: 'r-devel-ubsan-clang'}

    runs-on: ${{ matrix.config.os }}
    container: rocker/${{ matrix.config.img }}:latest
    name: ${{ matrix.config.os }} (${{ matrix.config.img }})

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            /usr/local/lib/R/site-library
          key: ${{ matrix.config.img }}

      - name: Install dependencies
        env:
           ASAN_OPTIONS: "detect_odr_violation=0"
        shell: Rscriptdevel {0}
        run: |
          install.packages("remotes")
          library("remotes")
          install_cran(c("codetools"))
          update(dev_package_deps(dependencies = TRUE))

      - name: Check with sanitizers
        env:
          NOT_CRAN: false
          ASAN_OPTIONS: "detect_leaks=0:detect_odr_violation=0"
        run: |
          Rdevel CMD build --no-build-vignettes --no-manual .
          Rdevel --vanilla CMD check *.tar.gz --as-cran --no-manual
        continue-on-error: true

      - name: Show testthat output
        if: always()
        run: find *.Rcheck -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.img }}-results
          path: |
            *.Rcheck/*.out
            *.Rcheck/*.log
